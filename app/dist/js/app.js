!function(e){function n(e){e.when("/idiomas",{controller:"idiomaController",controllerAs:"ctrl",templateUrl:"idiomas/idiomas.html",title:"Idiomas"})}e.module("app.idiomas",["ngRoute"]).config(n),n.$inject=["$routeProvider"]}(window.angular),function(e){e.module("app.settings",["ngRoute"]).config(["$routeProvider",function(e){e.when("/settings",{controller:"settingsController",controllerAs:"ctrl",templateUrl:"settings/settings.html",title:"Configuración"})}])}(window.angular),function(e){function n(e,n){function r(){var r=n.defer();return e.readSettings().then(function(e){var n=i.join(e.localLang,o);t.readFile(n,"utf8",function(e,n){e&&r.reject(e);try{var t=JSON.parse(n.trim());r.resolve(t)}catch(e){r.reject(e)}})}),r.promise}function a(e,n){if(e instanceof Array){var t=e.filter(function(e){return e.id==n});return t.length>0}throw"not an array"}function c(c){var u=n.defer();return e.readSettings().then(function(e){var n=i.join(e.localLang,o),s=i.join(e.localLang,c.id),l=i.join(s,"lang.json");r().then(function(e){a(e,c.id)?u.reject({code:"EXTLANG",description:"Este idioma ya existe"}):t.mkdir(s,function(i){i&&u.reject(i),t.writeFile(l,"{}","utf8",function(i){i&&u.reject(i),e.push(c);var o=JSON.stringify(e);t.writeFile(n,o,"utf8",function(e){e&&u.reject(e),u.resolve(!0)})})})})}),u.promise}return{getInstaledLanguages:r,saveLanguage:c}}var t=require("fs"),i=require("path");const o="languages.json";e.module("app.idiomas").service("idiomasService",n),n.$inject=["configService","$q"]}(window.angular),function(e){"use strict";function n(e){function n(n){return e.saveSettings(n)}function t(){return e.readSettings()}return{saveSettings:n,readSettings:t}}require("fs");e.module("app.settings").service("settingsService",n),n.$inject=["configService"]}(window.angular),function(e){"use strict";function n(e){function n(n){var o=e.defer();return t.writeFile(i,JSON.stringify(n),function(e){e&&o.reject(e),o.resolve(!0)}),o.promise}function o(){var n=e.defer();return t.exists(i,function(e){e?t.readFile(i,"utf8",function(e,t){e&&n.reject(e),n.resolve(JSON.parse(t.trim()))}):r().then(function(){return o()})}),n.promise}function r(){var n=e.defer();return t.writeFile(i,"{}","utf8",function(e){e&&n.reject(e),n.resolve(!0)}),n.promise}return{saveSettings:n,readSettings:o}}var t=require("fs"),i="./config.json";e.module("app.config",[]).service("configService",n),n.$inject=["$q"]}(window.angular),function(e){function n(e){function n(e){}return{alert:n}}e.module("app.utils",[]).service("utilsService",n),n.$inject=["$mdDialog"]}(window.angular),function(e){function n(n,t,i,o){function r(){o.getInstaledLanguages().then(function(e){n.idiomas=[].concat(e)})}function a(n){u.idioma={},t.show({title:"Agregar Idioma",controller:c,controllerAs:"ctrl",templateUrl:"idiomas/add-idioma.html",parent:e.element(document.body),targetEvent:n,clickOutsideToClose:!0})}function c(){function e(e){i(function(){function e(e){r.getInstaledLanguages(),n()}function t(e){r.idioma.error=!0}console.log(r);var i={id:r.idioma.id.toLowerCase(),description:r.idioma.description.toUpperCase()};o.saveLanguage(i).then(e,t)})}function n(){t.cancel()}var r=this;r.addIdioma=e,r.closeAddDialog=n}var u=this;u.openAddIdioma=a,u.getInstaledLanguages=r,u.getInstaledLanguages()}e.module("app.idiomas").controller("idiomaController",n),n.$inject=["$scope","$mdDialog","$timeout","idiomasService"]}(angular),function(e){function n(e,n,t,i){function o(e){t.saveSettings(s.form).then(function(n){var t=i.alert();t.textContent("Cambios Guardados con Exito!").title("Alerta!").targetEvent(e).ok("Aceptar"),i.show(t)})}function r(){t.readSettings().then(function(e){s.form=e})}function a(){u(function(e,n,t){s.form.localLang=n[0]})}function c(){u(function(e,n,t){s.form.remoteLang=n[0]})}function u(e){var t=require("electron").ipcRenderer;t.send("open-file-dialog"),t.once("selected-directory",function(t,i){n(e(t,i))})}var s=this;s.form={},s.chooseLocalLang=a,s.chooseRemoteLang=c,s.saveSettings=o,s.readSettings=r,s.readSettings()}e.module("app.settings").controller("settingsController",n),n.$inject=["$scope","$timeout","settingsService","$mdDialog"]}(window.angular),function(e){function n(e){e.$on("$routeChangeStart",function(n,t,i){e.currentTitle=t.$$route.title})}function t(e,n,t){function i(){n("menuLeft").close()}e.toggleMenu=function(){n("menuLeft").toggle()},e.open=function(e){t.path(e),i()},e.menu={main:[{icon:"language",menuText:"Idiomas",url:"/idiomas"},{icon:"code",menuText:"Etiquetas",url:"/etiquetas"}],settings:[{icon:"settings",menuText:"Configuración",url:"/settings"}]}}var i=["templates","app.config","app.settings","app.idiomas","ngMessages","ngMaterial","ngAnimate"];e.module("lang-tag-manager",i).run(n).controller("mainController",t),n.$inject=["$rootScope"],t.$inject=["$scope","$mdSidenav","$location"]}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkaW9tYXMvaWRpb21hcy5yb3V0ZXMuanMiLCJzZXR0aW5ncy9zZXR0aW5ncy5yb3V0ZXMuanMiLCJpZGlvbWFzL2lkaW9tYXMuc2VydmljZS5qcyIsInNldHRpbmdzL3NldHRpbmdzLnNlcnZpY2UuanMiLCJ1dGlscy9jb25maWcuc2VydmljZS5qcyIsInV0aWxzL3V0aWxzLnNlcnZpY2UuanMiLCJpZGlvbWFzL2lkaW9tYXMuY29udHJvbGxlci5qcyIsInNldHRpbmdzL3NldHRpbmdzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsImNvbmZpZ0ZuIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInRlbXBsYXRlVXJsIiwidGl0bGUiLCJtb2R1bGUiLCJjb25maWciLCIkaW5qZWN0Iiwid2luZG93IiwiaWRpb21hc1NlcnZpY2UiLCJjb25maWdTZXJ2aWNlIiwiJHEiLCJnZXRJbnN0YWxlZExhbmd1YWdlcyIsImRlZmVyZWQiLCJkZWZlciIsInJlYWRTZXR0aW5ncyIsInRoZW4iLCJzZXR0aW5ncyIsImxvY2FsRmlsZSIsInBhdGgiLCJqb2luIiwibG9jYWxMYW5nIiwibGFuZ3VhZ2VzRmlsZSIsImZzIiwicmVhZEZpbGUiLCJlcnIiLCJkYXRhIiwicmVqZWN0IiwibGFuZyIsIkpTT04iLCJwYXJzZSIsInRyaW0iLCJyZXNvbHZlIiwiZSIsInByb21pc2UiLCJsYW5nRXhpc3RzIiwiaWQiLCJBcnJheSIsImVsZW1lbnQiLCJmaWx0ZXIiLCJsZW5ndGgiLCJzYXZlTGFuZ3VhZ2UiLCJsYW5nRm9sZGVyIiwibmV3TGFuZ0ZpbGUiLCJsYW5ndWFnZXMiLCJjb2RlIiwiZGVzY3JpcHRpb24iLCJta2RpciIsIndyaXRlRmlsZSIsInB1c2giLCJsYW5ndWFnZXNTdHIiLCJzdHJpbmdpZnkiLCJyZXF1aXJlIiwic2VydmljZSIsInNldHRpbmdzU2VydmljZSIsInNhdmVTZXR0aW5ncyIsImNvbmZpZ0ZpbGUiLCJleGlzdHMiLCJjcmVhdGVDb25maWciLCJ1dGlsc1NlcnZpY2UiLCIkbWREaWFsb2ciLCJhbGVydCIsIm1zZyIsImlkaW9tYUNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkdGltZW91dCIsImlkaW9tYXMiLCJjb25jYXQiLCJvcGVuQWRkSWRpb21hIiwiZXYiLCJzZWxmIiwiaWRpb21hIiwic2hvdyIsImRpYWxvZ0NvbnRyb2xsZXIiLCJwYXJlbnQiLCJkb2N1bWVudCIsImJvZHkiLCJ0YXJnZXRFdmVudCIsImNsaWNrT3V0c2lkZVRvQ2xvc2UiLCJhZGRJZGlvbWEiLCJjdHJsIiwic3VjY2VzcyIsInJlc3VsdCIsImNsb3NlQWRkRGlhbG9nIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwidG9Mb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSIsImNhbmNlbCIsInRoaXMiLCJzZXR0aW5nc0NvbnRyb2xsZXIiLCJzZW5kZXIiLCJmb3JtIiwidGV4dENvbnRlbnQiLCJvayIsImNob29zZUxvY2FsTGFuZyIsIm9wZW5EaWFsb2ciLCJldmVudCIsInByb2MiLCJjaG9vc2VSZW1vdGVMYW5nIiwicmVtb3RlTGFuZyIsImNhbGxiYWNrIiwiaXBjUmVuZGVyZXIiLCJzZW5kIiwib25jZSIsInJ1bkZuIiwiJHJvb3RTY29wZSIsIiRvbiIsIiRldmVudCIsIm5leHQiLCJwcmV2IiwiY3VycmVudFRpdGxlIiwiJCRyb3V0ZSIsIm1haW5Db250cm9sbGVyIiwiJG1kU2lkZW5hdiIsIiRsb2NhdGlvbiIsImNsb3NlTWVudSIsImNsb3NlIiwidG9nZ2xlTWVudSIsInRvZ2dsZSIsIm9wZW4iLCJ1cmwiLCJtZW51IiwibWFpbiIsImljb24iLCJtZW51VGV4dCIsImRlcHMiLCJydW4iXSwibWFwcGluZ3MiOiJDQUNBLFNBQUFBLEdBTUEsUUFBQUMsR0FBQUMsR0FFQUEsRUFDQUMsS0FBQSxZQUNBQyxXQUFBLG1CQUNBQyxhQUFBLE9BQ0FDLFlBQUEsdUJBQ0FDLE1BQUEsWUFYQVAsRUFBQVEsT0FBQSxlQUFBLFlBQ0FD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blxuICBhbmd1bGFyLm1vZHVsZSgnYXBwLmlkaW9tYXMnLFsnbmdSb3V0ZSddKVxuICAuY29uZmlnKGNvbmZpZ0ZuKTtcblxuY29uZmlnRm4uJGluamVjdCA9IFsnJHJvdXRlUHJvdmlkZXInXTtcbmZ1bmN0aW9uIGNvbmZpZ0ZuKCRyb3V0ZVByb3ZpZGVyKXtcblxuICAkcm91dGVQcm92aWRlclxuICAud2hlbignL2lkaW9tYXMnLHtcbiAgICBjb250cm9sbGVyOidpZGlvbWFDb250cm9sbGVyJyxcbiAgICBjb250cm9sbGVyQXM6ICdjdHJsJyxcbiAgICB0ZW1wbGF0ZVVybDonaWRpb21hcy9pZGlvbWFzLmh0bWwnLFxuICAgIHRpdGxlOidJZGlvbWFzJ1xuICB9KTtcbn1cblxuXG59KSh3aW5kb3cuYW5ndWxhcik7XG4iLCJcbihmdW5jdGlvbihhbmd1bGFyKXtcbiAgYW5ndWxhci5tb2R1bGUoJ2FwcC5zZXR0aW5ncycsWyduZ1JvdXRlJ10pXG4gIC5jb25maWcoWyckcm91dGVQcm92aWRlcicsIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyKXtcbiAgXG4gICAgJHJvdXRlUHJvdmlkZXJcbiAgICAud2hlbignL3NldHRpbmdzJywge1xuICAgICAgY29udHJvbGxlcjonc2V0dGluZ3NDb250cm9sbGVyJyxcbiAgICAgIGNvbnRyb2xsZXJBczogJ2N0cmwnLFxuICAgICAgdGVtcGxhdGVVcmw6J3NldHRpbmdzL3NldHRpbmdzLmh0bWwnLFxuICAgICAgdGl0bGU6J0NvbmZpZ3VyYWNpw7NuJ1xuICAgIH0pO1xuICB9XSk7XG59KSh3aW5kb3cuYW5ndWxhcik7XG4iLCIgIC8qanNoaW50IGVzdmVyc2lvbjogNiAqL1xuKGZ1bmN0aW9uKGFuZ3VsYXIpe1xuXG4gIHZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG4gIHZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICBjb25zdCBsYW5ndWFnZXNGaWxlID0gJ2xhbmd1YWdlcy5qc29uJztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwLmlkaW9tYXMnKVxuICAuc2VydmljZSgnaWRpb21hc1NlcnZpY2UnLCBpZGlvbWFzU2VydmljZSk7XG5cbiAgaWRpb21hc1NlcnZpY2UuJGluamVjdCA9IFsnY29uZmlnU2VydmljZScsICckcSddO1xuICBmdW5jdGlvbiBpZGlvbWFzU2VydmljZShjb25maWdTZXJ2aWNlLCAkcSl7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdldEluc3RhbGVkTGFuZ3VhZ2VzOiBnZXRJbnN0YWxlZExhbmd1YWdlcyxcbiAgICAgIHNhdmVMYW5ndWFnZTogc2F2ZUxhbmd1YWdlXG5cbiAgICB9O1xuXG5cbiAgICBmdW5jdGlvbiBnZXRJbnN0YWxlZExhbmd1YWdlcygpe1xuICAgICAgdmFyIGRlZmVyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBjb25maWdTZXJ2aWNlLnJlYWRTZXR0aW5ncygpLnRoZW4oZnVuY3Rpb24oc2V0dGluZ3Mpe1xuXG4gICAgICAgIHZhciBsb2NhbEZpbGUgPSBwYXRoLmpvaW4oc2V0dGluZ3MubG9jYWxMYW5nLCBsYW5ndWFnZXNGaWxlKTtcbiAgICAgICAgLy92YXIgcmVtb3RlRmlsZSA9IHBhdGguam9pbihzZXR0aW5ncy5yZW1vdGVMYW5nLCBsYW5ndWFnZXMpO1xuXG4gICAgICAgIGZzLnJlYWRGaWxlKGxvY2FsRmlsZSwndXRmOCcsZnVuY3Rpb24oZXJyLCBkYXRhKXtcbiAgICAgICAgICBpZihlcnIpZGVmZXJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgICB0cnl7XG4gICAgICAgICAgICB2YXIgbGFuZyA9IEpTT04ucGFyc2UoZGF0YS50cmltKCkpO1xuICAgICAgICAgICAgZGVmZXJlZC5yZXNvbHZlKGxhbmcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXRjaChlKXtcbiAgICAgICAgICAgIGRlZmVyZWQucmVqZWN0KGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcmVkLnByb21pc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGFuZ0V4aXN0cyhsYW5nLCBpZCl7XG5cbiAgICAgIGlmKGxhbmcgaW5zdGFuY2VvZiBBcnJheSl7XG4gICAgICAgIHZhciBlbGVtZW50ID0gbGFuZy5maWx0ZXIoZnVuY3Rpb24oZSl7XG4gICAgICAgICAgcmV0dXJuIGUuaWQgPT0gaWQ7XG4gICAgICAgIH0pO1xuICAgICAgICBpZihlbGVtZW50Lmxlbmd0aCA+IDApe1xuICAgICAgICAgIC8vZXhpc3RlXG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgJ25vdCBhbiBhcnJheSc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2F2ZUxhbmd1YWdlKGxhbmcpe1xuICAgICAgdmFyIGRlZmVyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgY29uZmlnU2VydmljZS5yZWFkU2V0dGluZ3MoKS50aGVuKGZ1bmN0aW9uKHNldHRpbmdzKXtcbiAgICAgICAgdmFyIGxvY2FsRmlsZSA9IHBhdGguam9pbihzZXR0aW5ncy5sb2NhbExhbmcsIGxhbmd1YWdlc0ZpbGUpO1xuICAgICAgICB2YXIgbGFuZ0ZvbGRlciA9IHBhdGguam9pbihzZXR0aW5ncy5sb2NhbExhbmcsIGxhbmcuaWQpO1xuICAgICAgICB2YXIgbmV3TGFuZ0ZpbGUgPSBwYXRoLmpvaW4obGFuZ0ZvbGRlciwgJ2xhbmcuanNvbicpO1xuICAgICAgICBnZXRJbnN0YWxlZExhbmd1YWdlcygpLnRoZW4oZnVuY3Rpb24obGFuZ3VhZ2VzKXtcbiAgICAgICAgICBpZighbGFuZ0V4aXN0cyhsYW5ndWFnZXMsIGxhbmcuaWQpKXtcblxuICAgICAgICAgICAgZnMubWtkaXIobGFuZ0ZvbGRlciwgZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgaWYoZXJyKSBkZWZlcmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgICBmcy53cml0ZUZpbGUobmV3TGFuZ0ZpbGUsICd7fScsJ3V0ZjgnLCBmdW5jdGlvbihlcnIpe1xuICAgICAgICAgICAgICAgIGlmKGVycilkZWZlcmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgIGxhbmd1YWdlcy5wdXNoKGxhbmcpO1xuICAgICAgICAgICAgICAgIHZhciBsYW5ndWFnZXNTdHIgPSBKU09OLnN0cmluZ2lmeShsYW5ndWFnZXMpO1xuICAgICAgICAgICAgICAgIGZzLndyaXRlRmlsZShsb2NhbEZpbGUsbGFuZ3VhZ2VzU3RyLCd1dGY4JywgZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICAgICAgICAgIGlmKGVycilkZWZlcmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgZGVmZXJlZC5yZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgZGVmZXJlZC5yZWplY3Qoe2NvZGU6ICdFWFRMQU5HJywgZGVzY3JpcHRpb246ICdFc3RlIGlkaW9tYSB5YSBleGlzdGUnfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVyZWQucHJvbWlzZTtcbiAgICB9XG4gIH1cblxufSkod2luZG93LmFuZ3VsYXIpO1xuIiwiXG4oZnVuY3Rpb24oYW5ndWxhcil7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG4gIHZhciBjb25maWdGaWxlID0gJy4vY29uZmlnLmpzb24nO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAuc2V0dGluZ3MnKVxuICAuc2VydmljZSgnc2V0dGluZ3NTZXJ2aWNlJywgc2V0dGluZ3NTZXJ2aWNlKTtcblxuICBzZXR0aW5nc1NlcnZpY2UuJGluamVjdCA9IFsnY29uZmlnU2VydmljZSddO1xuICBmdW5jdGlvbiBzZXR0aW5nc1NlcnZpY2UoY29uZmlnU2VydmljZSl7XG5cbiAgICAgIGZ1bmN0aW9uIHNhdmVTZXR0aW5ncyhzZXR0aW5ncyl7XG4gICAgICAgIHJldHVybiBjb25maWdTZXJ2aWNlLnNhdmVTZXR0aW5ncyhzZXR0aW5ncyk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHJlYWRTZXR0aW5ncygpe1xuICAgICAgICByZXR1cm4gY29uZmlnU2VydmljZS5yZWFkU2V0dGluZ3MoKTtcbiAgICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzYXZlU2V0dGluZ3M6IHNhdmVTZXR0aW5ncyxcbiAgICAgIHJlYWRTZXR0aW5nczogcmVhZFNldHRpbmdzXG4gICAgfTtcbiAgfVxuXG5cbn0pKHdpbmRvdy5hbmd1bGFyKTtcbiIsIihmdW5jdGlvbihhbmd1bGFyKXtcblxuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbiAgdmFyIGNvbmZpZ0ZpbGUgPSAnLi9jb25maWcuanNvbic7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcC5jb25maWcnLFtdKVxuICAuc2VydmljZSgnY29uZmlnU2VydmljZScsIHNldHRpbmdzU2VydmljZSk7XG5cbiAgc2V0dGluZ3NTZXJ2aWNlLiRpbmplY3QgPSBbJyRxJ107XG4gIGZ1bmN0aW9uIHNldHRpbmdzU2VydmljZSgkcSl7XG5cbiAgICAgIGZ1bmN0aW9uIHNhdmVTZXR0aW5ncyhzZXR0aW5ncyl7XG4gICAgICAgIHZhciBkZWZlcmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgICBmcy53cml0ZUZpbGUoY29uZmlnRmlsZSwgSlNPTi5zdHJpbmdpZnkoc2V0dGluZ3MpLCBmdW5jdGlvbihlcnIpe1xuICAgICAgICAgIGlmKGVycikgZGVmZXJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgICBkZWZlcmVkLnJlc29sdmUodHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVmZXJlZC5wcm9taXNlO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiByZWFkU2V0dGluZ3MoKXtcbiAgICAgICAgdmFyIGRlZmVyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIGZzLmV4aXN0cyhjb25maWdGaWxlLCBmdW5jdGlvbihleGlzdHMpe1xuICAgICAgICAgIGlmKGV4aXN0cyl7XG4gICAgICAgICAgICBmcy5yZWFkRmlsZShjb25maWdGaWxlLCd1dGY4JywgZnVuY3Rpb24oZXJyLCBkYXRhKXtcbiAgICAgICAgICAgICAgaWYoZXJyKSBkZWZlcmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgICBkZWZlcmVkLnJlc29sdmUoSlNPTi5wYXJzZShkYXRhLnRyaW0oKSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY3JlYXRlQ29uZmlnKCkudGhlbihmdW5jdGlvbigpe1xuICAgICAgICAgICAgICByZXR1cm4gcmVhZFNldHRpbmdzKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVmZXJlZC5wcm9taXNlO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBjcmVhdGVDb25maWcoKXtcbiAgICAgICAgdmFyIGRlZmVyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICBmcy53cml0ZUZpbGUoY29uZmlnRmlsZSwne30nLCd1dGY4JywgZnVuY3Rpb24oZXJyKXtcbiAgICAgICAgICBpZihlcnIpIGRlZmVyZWQucmVqZWN0KGVycik7XG4gICAgICAgICAgZGVmZXJlZC5yZXNvbHZlKHRydWUpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlZmVyZWQucHJvbWlzZTtcbiAgICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzYXZlU2V0dGluZ3M6IHNhdmVTZXR0aW5ncyxcbiAgICAgIHJlYWRTZXR0aW5nczogcmVhZFNldHRpbmdzXG4gICAgfTtcbiAgfVxuXG59KSh3aW5kb3cuYW5ndWxhcik7XG4iLCIoZnVuY3Rpb24oYW5ndWxhcil7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcC51dGlscycsW10pXG4gIC5zZXJ2aWNlKCd1dGlsc1NlcnZpY2UnLCB1dGlsc1NlcnZpY2UpO1xuXG4gIHV0aWxzU2VydmljZS4kaW5qZWN0ID0gWyckbWREaWFsb2cnXTtcbiAgZnVuY3Rpb24gdXRpbHNTZXJ2aWNlKCRtZERpYWxvZyl7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFsZXJ0OiBhbGVydFxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBhbGVydChtc2cpe1xuXG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZUFsZXJ0KCRldmVudCxtc2csdGl0bGUsIHR5cGUpe1xuICAgICAgdHlwZSA9IHR5cGUgfHwgJ2FsZXJ0JztcbiAgICAgIHRpdGxlID0gdGl0bGUgfHwgJ0FsZXJ0JztcbiAgICAgIHZhciBtZEFsZXJ0O1xuXG4gICAgICBpZih0eXBlID09ICdhbGVydCcpe1xuICAgICAgICBtZEFsZXJ0ID0gJG1kRGlhbG9nLmFsZXJ0KCk7XG4gICAgICB9IGVsc2UgaWYodHlwZSA9PSAnZXJyb3InKXtcbiAgICAgICAgbWRBbGVydCA9ICRtZERpYWxvZy5hbGVydCgpO1xuICAgICAgfSBlbHNlIGlmKHR5cGUgPT0gJ2NvbmZpcm0nKXtcbiAgICAgICAgbWRBbGVydCA9ICRtZERpYWxvZy5jb25maXJtKCk7XG5cbiAgICAgICAgbWRBbGVydC5jbGlja091dHNpZGVUb0Nsb3NlKHRydWUpXG4gICAgICAgIC50aXRsZSh0aXRsZSlcbiAgICAgICAgLnRleHRDb250ZW50KG1zZylcbiAgICAgICAgLm9rKCdTaScpXG4gICAgICAgIC5jYW5jZWwoJ05vJylcbiAgICAgICAgLnRhcmdldEV2ZW50KCRldmVudCk7XG5cbiAgICAgICAgcmV0dXJuICRtZERpYWxvZy5zaG93KG1kQWxlcnQpO1xuICAgICAgfVxuXG4gICAgICBtZEFsZXJ0LmNsaWNrT3V0c2lkZVRvQ2xvc2UodHJ1ZSlcbiAgICAgIC50aXRsZSh0aXRsZSlcbiAgICAgIC50ZXh0Q29udGVudChtc2cpXG4gICAgICAudGFyZ2V0RXZlbnQoJGV2ZW50KTtcblxuICAgICAgJG1kRGlhbG9nLnNob3cobWRBbGVydCk7XG4gICAgfVxuICB9XG5cbn0pKHdpbmRvdy5hbmd1bGFyKTtcbiIsIihmdW5jdGlvbihhbmd1bGFyKSB7XG5cblx0YW5ndWxhci5tb2R1bGUoJ2FwcC5pZGlvbWFzJylcblx0XHQuY29udHJvbGxlcignaWRpb21hQ29udHJvbGxlcicsIGlkaW9tYUNvbnRyb2xsZXIpO1xuXG5cdGlkaW9tYUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywgJyRtZERpYWxvZycsJyR0aW1lb3V0JywnaWRpb21hc1NlcnZpY2UnXTtcblxuXHRmdW5jdGlvbiBpZGlvbWFDb250cm9sbGVyKCRzY29wZSwgJG1kRGlhbG9nLCR0aW1lb3V0LGlkaW9tYXNTZXJ2aWNlKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdHNlbGYub3BlbkFkZElkaW9tYSA9IG9wZW5BZGRJZGlvbWE7XG5cdFx0c2VsZi5nZXRJbnN0YWxlZExhbmd1YWdlcyA9IGdldEluc3RhbGVkTGFuZ3VhZ2VzO1xuXG5cdFx0c2VsZi5nZXRJbnN0YWxlZExhbmd1YWdlcygpO1xuXG5cblx0XHRmdW5jdGlvbiBnZXRJbnN0YWxlZExhbmd1YWdlcygpe1xuXHRcdFx0aWRpb21hc1NlcnZpY2UuZ2V0SW5zdGFsZWRMYW5ndWFnZXMoKS50aGVuKGZ1bmN0aW9uKGxhbmcpe1xuXHRcdFx0XHQkc2NvcGUuaWRpb21hcyA9IFtdLmNvbmNhdChsYW5nKTtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIG9wZW5BZGRJZGlvbWEoZXYpIHtcblx0XHRcdHNlbGYuaWRpb21hID0ge307XG5cdFx0XHQkbWREaWFsb2cuc2hvdyh7XG5cdFx0XHRcdHRpdGxlOiAnQWdyZWdhciBJZGlvbWEnLFxuXHRcdFx0XHRjb250cm9sbGVyOiBkaWFsb2dDb250cm9sbGVyLFxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICdjdHJsJyxcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdpZGlvbWFzL2FkZC1pZGlvbWEuaHRtbCcsXG5cdFx0XHRcdHBhcmVudDogYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmJvZHkpLFxuXHRcdFx0XHR0YXJnZXRFdmVudDogZXYsXG5cdFx0XHRcdGNsaWNrT3V0c2lkZVRvQ2xvc2U6IHRydWVcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIGRpYWxvZ0NvbnRyb2xsZXIoKXtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0c2VsZi5hZGRJZGlvbWEgPSBhZGRJZGlvbWE7XG5cdFx0XHRzZWxmLmNsb3NlQWRkRGlhbG9nID0gY2xvc2VBZGREaWFsb2c7XG5cblx0XHRcdGZ1bmN0aW9uIGFkZElkaW9tYShjdHJsKSB7XG5cdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHNlbGYpO1xuXHRcdFx0XHRcdHZhciBsYW5nID0ge2lkOiBzZWxmLmlkaW9tYS5pZC50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0ZGVzY3JpcHRpb246IHNlbGYuaWRpb21hLmRlc2NyaXB0aW9uLnRvVXBwZXJDYXNlKClcblx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0aWRpb21hc1NlcnZpY2Uuc2F2ZUxhbmd1YWdlKGxhbmcpLnRoZW4oc3VjY2VzcywgZXJyb3IpO1xuXG5cdFx0XHRcdFx0ZnVuY3Rpb24gc3VjY2VzcyhyZXN1bHQpe1xuXHRcdFx0XHRcdFx0c2VsZi5nZXRJbnN0YWxlZExhbmd1YWdlcygpO1xuXHRcdFx0XHRcdFx0Y2xvc2VBZGREaWFsb2coKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZnVuY3Rpb24gZXJyb3IocmVzdWx0KXtcblx0XHRcdFx0XHRcdHNlbGYuaWRpb21hLmVycm9yID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0ZnVuY3Rpb24gY2xvc2VBZGREaWFsb2coKSB7XG5cdFx0XHRcdCRtZERpYWxvZy5jYW5jZWwoKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0pKGFuZ3VsYXIpO1xuIiwiXG5cbihmdW5jdGlvbihhbmd1bGFyKXtcblxuYW5ndWxhci5tb2R1bGUoJ2FwcC5zZXR0aW5ncycpXG4uY29udHJvbGxlcignc2V0dGluZ3NDb250cm9sbGVyJywgc2V0dGluZ3NDb250cm9sbGVyKTtcblxuc2V0dGluZ3NDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyR0aW1lb3V0Jywnc2V0dGluZ3NTZXJ2aWNlJywnJG1kRGlhbG9nJ107XG5mdW5jdGlvbiBzZXR0aW5nc0NvbnRyb2xsZXIoJHNjb3BlLCAkdGltZW91dCwgc2V0dGluZ3NTZXJ2aWNlLCAkbWREaWFsb2cpe1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgc2VsZi5mb3JtID0ge307XG4gIHNlbGYuY2hvb3NlTG9jYWxMYW5nID0gY2hvb3NlTG9jYWxMYW5nO1xuICBzZWxmLmNob29zZVJlbW90ZUxhbmcgPSBjaG9vc2VSZW1vdGVMYW5nO1xuICBzZWxmLnNhdmVTZXR0aW5ncyA9IHNhdmVTZXR0aW5ncztcbiAgc2VsZi5yZWFkU2V0dGluZ3MgPSByZWFkU2V0dGluZ3M7XG5cbiAgc2VsZi5yZWFkU2V0dGluZ3MoKTtcblxuICBmdW5jdGlvbiBzYXZlU2V0dGluZ3Moc2VuZGVyKXtcbiAgICBzZXR0aW5nc1NlcnZpY2Uuc2F2ZVNldHRpbmdzKHNlbGYuZm9ybSkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuICAgICAgdmFyIGFsZXJ0ID0gJG1kRGlhbG9nLmFsZXJ0KCk7XG5cbiAgICAgIGFsZXJ0LnRleHRDb250ZW50KCdDYW1iaW9zIEd1YXJkYWRvcyBjb24gRXhpdG8hJylcbiAgICAgIC50aXRsZSgnQWxlcnRhIScpXG4gICAgICAudGFyZ2V0RXZlbnQoc2VuZGVyKVxuICAgICAgLm9rKCdBY2VwdGFyJyk7XG4gICAgICAkbWREaWFsb2cuc2hvdyhhbGVydCk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZWFkU2V0dGluZ3MoKXtcbiAgICBzZXR0aW5nc1NlcnZpY2UucmVhZFNldHRpbmdzKCkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuICAgICAgc2VsZi5mb3JtID0gcmVzdWx0O1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hvb3NlTG9jYWxMYW5nKCkge1xuICAgIG9wZW5EaWFsb2coZnVuY3Rpb24oZXZlbnQsIHBhdGgsIHByb2Mpe1xuICAgICAgc2VsZi5mb3JtLmxvY2FsTGFuZyA9IHBhdGhbMF07XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBjaG9vc2VSZW1vdGVMYW5nKCkge1xuICAgIG9wZW5EaWFsb2coZnVuY3Rpb24oZXZlbnQsIHBhdGgsIHByb2Mpe1xuICAgICAgc2VsZi5mb3JtLnJlbW90ZUxhbmcgPSBwYXRoWzBdO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gb3BlbkRpYWxvZyhjYWxsYmFjayl7XG4gICAgdmFyIHByb2MgPSByZXF1aXJlKCdlbGVjdHJvbicpLmlwY1JlbmRlcmVyO1xuICAgIHByb2Muc2VuZCgnb3Blbi1maWxlLWRpYWxvZycpO1xuICAgIHByb2Mub25jZSgnc2VsZWN0ZWQtZGlyZWN0b3J5JywgZnVuY3Rpb24oZXZlbnQsIHBhdGgpe1xuICAgICAgJHRpbWVvdXQoY2FsbGJhY2soZXZlbnQsIHBhdGgpKTtcbiAgICB9KTtcbiAgfVxufVxuXG59KSh3aW5kb3cuYW5ndWxhcik7XG4iXX0=
